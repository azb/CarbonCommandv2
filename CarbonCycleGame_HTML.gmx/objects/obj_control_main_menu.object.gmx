<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>str_game_name = "Carbon#Commander"
str_start_game = "Start Game"
str_tutorial = "How to Play"
str_exit_game = "Exit Game"
str_debug = 0

menu_start_x = room_width * 5 / 7 - 96
menu_start_y = room_height * 2 / 5

button_x1 = 0
button_x2 = 384
button_y1 = 0
button_y2 = 96

button_spacer = 128


start_pressed = 0
tutorial_pressed = 0
credit_pressed = 0
exit_pressed = 0

start_index = 1
tutorial_index = 2
credits_index = 3
exit_index =  3

name_x1 = 1440 + 64
name_y1 = 320

start_button_x1 = button_x1 + menu_start_x 
start_button_x2 = start_button_x1 + button_x2
start_button_y1 = button_y1 + menu_start_y + (button_spacer * start_index)
start_button_y2 = start_button_y1 + button_y2

tutorial_button_x1 = button_x1 + menu_start_x 
tutorial_button_x2 = tutorial_button_x1 + button_x2
tutorial_button_y1 = button_y1 + menu_start_y  + (button_spacer * tutorial_index)
tutorial_button_y2 = tutorial_button_y1 + button_y2

exit_button_x1 = button_x1 + menu_start_x
exit_button_x2 = exit_button_x1 + button_x2
exit_button_y1 = button_y1 + menu_start_y + (button_spacer * exit_index)
exit_button_y2 = exit_button_y1 + button_y2

mouse_clicked_x = 0
mouse_clicked_y = 0


global.mouse_zones = 1
global.mouse_zone_x1[global.mouse_zones] = 0
global.mouse_zone_y1[global.mouse_zones] = 0
global.mouse_zone_x2[global.mouse_zones] = 0
global.mouse_zone_y2[global.mouse_zones] = 0


audio_play_sound(mus_quizupgrade,1,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_escape)
{
    game_end()
}

if mouse_check_button_pressed(mb_left)
{
/*
    mouse_clicked_x = mouse_x
    mouse_clicked_y = mouse_y
    if (mouse_clicked_x &gt; start_button_x1 and mouse_clicked_x &lt; start_button_x2) and
       (mouse_clicked_y &gt; start_button_y1 and mouse_clicked_y &lt; start_button_y2) 
    {
        room_goto(rm_land)
        str_debug = 1
    }
    else if (mouse_clicked_x &gt; tutorial_button_x1 and mouse_clicked_x &lt; tutorial_button_x2) and
       (mouse_clicked_y &gt; tutorial_button_y1 and mouse_clicked_y &lt; tutorial_button_y2) 
    {
        room_goto(rm_tutorial)
        str_debug = 2
    }
    else if (mouse_clicked_x &gt; exit_button_x1 and mouse_clicked_x &lt; exit_button_x2) and
       (mouse_clicked_y &gt; exit_button_y1 and mouse_clicked_y &lt; exit_button_y2) 
    {
        game_end()
        str_debug = 3
    }
    else 
    {
        str_debug = 0
    }
    */
    str_debug = 1
}
if start_pressed == 1
{
    room_goto(rm_land)
    
    str_debug = 2
}
if tutorial_pressed == 1
{
    //room_goto(rm_ocean)
    str_debug = 3
}
if exit_pressed == 1
{
    game_end()
    str_debug = 4
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_rectangle(start_button_x1,start_button_y1,start_button_x2,start_button_y2,1)
draw_rectangle(tutorial_button_x1,tutorial_button_y1,tutorial_button_x2,tutorial_button_y2,1)
draw_rectangle(exit_button_x1,exit_button_y1,exit_button_x2,exit_button_y2,1)

draw_text(menu_start_x,menu_start_y + (32 *1),str_start_game)
draw_text(menu_start_x,menu_start_y + (32 *2),str_tutorial)
draw_text(menu_start_x,menu_start_y + (32 *3),str_exit_game)
draw_text(menu_start_x,menu_start_y + (32 *4),str_debug)

draw_circle(mouse_clicked_x,mouse_clicked_y,32,1)

*/

draw_set_font(fnt_large)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_text(name_x1,name_y1,str_game_name)

//draw_text_transformed(name_x1,name_y1,str_game_name,7,7,0)

//start_pressed = 

if button(spr_button_tab,start_button_x1,start_button_y1,start_button_x2 - start_button_x1,
    start_button_y2 - start_button_y1,"Start Game",-1,1," ")
    {
    room = rm_land
    if instance_exists(obj_control)
        {
        obj_control.alarm[0] = 1
        obj_control.by = 515 //obj_control.by_start
        }
    }
tutorial_pressed = button(spr_button_tab,tutorial_button_x1,tutorial_button_y1,tutorial_button_x2 - tutorial_button_x1,
    tutorial_button_y2 - tutorial_button_y1,"How to Play",-1,1," ")

exit_pressed = button(spr_button_tab,exit_button_x1,exit_button_y1,exit_button_x2 - exit_button_x1,
    exit_button_y2 - exit_button_y1,"Exit Game",-1,1," ")
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
